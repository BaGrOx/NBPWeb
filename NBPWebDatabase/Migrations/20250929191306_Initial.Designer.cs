// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NBPWebDatabase;

#nullable disable

namespace NBPWebDatabase.Migrations
{
    [DbContext(typeof(NbpDbContext))]
    [Migration("20250929191306_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NBPWebDatabase.Models.ExchangeRate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Currency")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("ExchangeTableId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Mid")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("ExchangeTableId", "Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("ExchangeRates", (string)null);
                });

            modelBuilder.Entity("NBPWebDatabase.Models.ExchangeTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("EffectiveDate")
                        .HasColumnType("date");

                    b.Property<string>("No")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Table")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.HasIndex("EffectiveDate");

                    b.HasIndex("No")
                        .IsUnique()
                        .HasFilter("[No] IS NOT NULL");

                    b.ToTable("ExchangeTables", (string)null);
                });

            modelBuilder.Entity("NBPWebDatabase.Models.ExchangeRate", b =>
                {
                    b.HasOne("NBPWebDatabase.Models.ExchangeTable", "ExchangeTable")
                        .WithMany("Rates")
                        .HasForeignKey("ExchangeTableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExchangeTable");
                });

            modelBuilder.Entity("NBPWebDatabase.Models.ExchangeTable", b =>
                {
                    b.Navigation("Rates");
                });
#pragma warning restore 612, 618
        }
    }
}
